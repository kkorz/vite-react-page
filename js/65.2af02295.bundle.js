"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[65],{79065:function(e,n,t){t.r(n),t.d(n,{default:function(){return m}});var l,a=t(2029),r=t(67294),u=t(27049),c=t(18222),i=t(61131),o=(l=function(){return r.createElement(i.Z,null,r.createElement("p",null,"我是展示组件"),r.createElement("p",null,"被WithLoading包裹"),r.createElement("p",null,"会根据传入的loading属性展示Loading状态"))},function(e){return e.loading?r.createElement("div",null,"Loading"):r.createElement(l,e)}),m=function(){var e=(0,r.useState)(!1),n=(0,a.Z)(e,2),t=n[0],l=n[1];return r.createElement(r.Fragment,null,r.createElement("h2",null,"WithLoading"),r.createElement("h3",null,"利用高阶函数（HOC）进行",r.createElement("strong",null,"渲染劫持"),"，根据传入的loading状态决定展示Loading组件还是目标组件"),r.createElement(o,{loading:t}),r.createElement(u.Z,null),r.createElement(c.Z,{type:"primary",onClick:function(){l(!0),setTimeout((function(){l(!1)}),2e3)}},"模拟请求接口"))}}}]);